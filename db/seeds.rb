Project.create!([
  # { user_id: 1, name: "DevHero",
  #   project_type: "Web App",
  #   client: "Actualize", 
  #   description: "<p>I developed this app as a hiring/networking tool for employers and alumni of Actualize coding bootcamp.</p>\r\n\r\n<p>Students can create a profile including information about their tech skills, projects, job preferences, etc. to show off their individual skills to potential employers. Employers create profiles for their companies and can log in to search the alumni database for potential hires, who they can email via the app to begin a conversation.</p>\r\n\r\n<p>It is built using Ruby on Rails, while AngularJS provides the ability to search student profiles and dynamically filter profiles by technology/skills.</p>", 
  #   github: "https://github.com/the-difference-engine/network-app", 
  #   website: "http://devhero.io" 
  # },
  { user_id: 1, 
    name: "Seat Scoop",
    project_type: "Web App, Actualize Capstone", 
    description: "<p>No one likes buying an expensive ticket only to get to the theater and find they're stuck with a terrible view. And what exactly should I expect when venues say a seat has a *limited* or *obstructed* view? As a huge fan of theater I go to a lot of shows, and making an app to address these issues was the first thing that came to mind when it was time to choose a capstone project for my coding bootcamp.</p>\r\n\r\n<p>Seat Scoop is a web app that helps users get an inside look at theaters, particularly their seating plan. It is also linked to the SeatGeek and Google Places APIs, which help users search events and nearby restaurants to plan other details of a night out.  But the main feature is the production of dynamic seating charts with clickable seats that show you photos of the view of the stage from each individual seat.</p>\r\n\r\n<p>Photos of seat views are crowd sourced, so users can upload photos from their night out to a venue's seating chart. The next visitor to the venue's page will then have access to a series of photos for a seat, so they know exactly what to expect if they decide to buy that seat.</p>\r\n\r\n<p>It is built using Ruby on Rails and utilizes JavaScript and the EaselJS library for drawing the seating charts, AngularJS for dynamic search/filtering, HTML, CSS, Bootstrap, MySQL, Amazon S3, and the Google Maps/Places and SeatGeek APIs.", 
    github: "https://github.com/dianacamacho/theater-app", 
    screencast: "https://www.youtube.com/watch?v=gJRIlpB5N10" 
  },
  { user_id: 1, 
    name: "JUST-a-BREAK", 
    project_type: "Web App", 
    client: "Non-profit JUST-a-BREAK", 
    description: "<p>Just-a-Break is an organization that obtains donations from businesses located near cancer treatment centers and presents the gifts to cancer patients or their caregivers to give them \"just a break.\" They needed a web app that allowed them to manage their team of volunteers and the donations they receive.</p>\r\n\r\n<p>Using Ruby on Rails, my team and I built an app that enables volunteers to add businesses, donations, and treatment centers to a database from the field, via any device. AngularJS provides dynamic search functionality so volunteers can quickly filter entries to find a business, gift, or treatment center. The software we built helps Just-a-Break operate more efficiently and effectively.</p>\r\n\r\n<p>I was responsible for testing feature code and managing deployment to our QA, Demo, and Production servers on Heroku. We worked in an agile environment, completing two-week sprints before each app demo with the client.</p>\r\n\r\n", 
    github: "https://github.com/difference-engine-just-a-break/just-a-break" 
  }
])

Technology.create!([
  {name: "Ruby"},
  {name: "Ruby on Rails"},
  {name: "AngularJS"},
  {name: "Vue.js"},
  {name: "API Integration"},
  {name: "SQL"},
  {name: "Sinatra"},
  {name: "PostgreSQL"},
  {name: "MySQL"},
  {name: "RSpec"},
  {name: "Capybara"},
  {name: "Jasmine"},
  {name: "Python"},
  {name: "MongoDB"},
  {name: "Node.js"},
  {name: "Express"},
  {name: "Backbone.js"},
  {name: "Foundation"},
  {name: "Java"},
  {name: "React"},
  {name: "PHP"},
  {name: "Firebase"},
  {name: "C++"},
  {name: "Sass"},
  {name: "D3.js"},
  {name: "Handlebars"},
  {name: "Meteor"},
  {name: "Photoshop"},
  {name: "Ionic"},
  {name: "Django"},
  {name: "Swift"},
  {name: "C"},
  {name: "Selenium"},
  {name: "Ember.js"},
  {name: "C#"},
  {name: ".Net"},
  {name: "R"},
  {name: "Mongoose"},
  {name: "MATLAB"},
  {name: "Drupal"},
  {name: "PhoneGap"},
  {name: "Cordova"},
  {name: "Flask"},
  {name: "Cucumber"},
  {name: "Perl"},
  {name: "ASP.net"},
  {name: "iOS"},
  {name: "Android"},
  {name: "Go"},
  {name: "Elixir"},
  {name: "Erlang"},
  {name: "Rust"},
  {name: "Scala"},
  {name: "Clojure"},
  {name: "CouchDB"},
  {name: "Hadoop"},
  {name: "Hive"},
  {name: "Spark"},
  {name: "Language Agnostic"},
  {name: "Objective-C"},
  {name: "CoffeeScript"},
  {name: "JavaScript"},
  {name: "HTML"},
  {name: "CSS"},
  {name: "Git"}
])
